package app.exploitr.hackbright;

import android.os.Build;
import android.os.Bundle;
import android.os.Process;
import android.support.design.widget.FloatingActionButton;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import org.adw.library.widgets.discreteseekbar.DiscreteSeekBar;

public class MainActivity extends AppCompatActivity {

    DiscreteSeekBar seekBar;
    TextView valuesView;
    private int Progress;

    View mView;

    public static final String XPATH = "/sys/class/leds/lcd-backlight/brightness";
    public static final String XMPATH = "/sys/class/leds/lcd-backlight/max_brightness";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        seekBar = (DiscreteSeekBar) findViewById(R.id.valueParser);
        valuesView = (TextView) findViewById(R.id.curBrightness);
        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.help);

        mView = getWindow().getDecorView();

        System.out.println("TEST CODE CUR BRG" + new ShellGet(XPATH, XMPATH).getCurrentBrightness());
        System.out.println("TEST CODE MAX BRG" + new ShellGet(XPATH, XMPATH).getMaxBrightness());

        seekBar.setProgress(new ShellGet(XPATH, XMPATH).getCurrentBrightness());
        valuesView.setText(new ShellGet(XPATH, XMPATH).getCurrentBrightness() + " // " + new ShellGet(XPATH, XMPATH).getMaxBrightness());

        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                    finishAndRemoveTask();
                } else Process.killProcess(Process.myPid());
            }
        });

        seekBar.setOnProgressChangeListener(new DiscreteSeekBar.OnProgressChangeListener() {
            @Override
            public void onProgressChanged(DiscreteSeekBar seekBar, int value, boolean fromUser) {
                Progress = value;
                // if (isTrue)new ShellSet(seekBar, valuesView, getWindow().getDecorView(), XPATH, XMPATH).execute(Progress);
                if (fromUser) {
                    new ShellSet(mView, XPATH).setBrightness(value);
                }
            }

            @Override
            public void onStartTrackingTouch(DiscreteSeekBar seekBar) {
            }

            @Override
            public void onStopTrackingTouch(DiscreteSeekBar seekBar) {
                //  new ShellGet(seekBar, valuesView, XPATH, XMPATH).execute();
                valuesView.setText(new ShellGet(XPATH, XMPATH).getCurrentBrightness() + " // " + new ShellGet(XPATH, XMPATH).getMaxBrightness());
            }
        });

        Button plux = (Button) findViewById(R.id.plux);
        plux.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                System.out.println(Progress);
                //   new ShellSet(seekBar, valuesView, getWindow().getDecorView(), XPATH, XMPATH).execute(Progress + 1);
                new ShellSet(mView, XPATH).setBrightness(Progress + 1);
                valuesView.setText(new ShellGet(XPATH, XMPATH).getCurrentBrightness() + " // " + new ShellGet(XPATH, XMPATH).getMaxBrightness());
                seekBar.setProgress(Progress + 1);
                return false;
            }
        });
        Button minux = (Button) findViewById(R.id.minux);
        minux.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                System.out.println(Progress);
                //   new ShellSet(seekBar, valuesView, getWindow().getDecorView(), XPATH, XMPATH).execute(Progress - 1);
                new ShellSet(mView, XPATH).setBrightness(Progress + 1);
                valuesView.setText(new ShellGet(XPATH, XMPATH).getCurrentBrightness() + " // " + new ShellGet(XPATH, XMPATH).getMaxBrightness());
                seekBar.setProgress(Progress - 1);
                return false;
            }
        });
    }
}
