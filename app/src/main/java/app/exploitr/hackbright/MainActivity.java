package app.exploitr.hackbright;

import android.content.DialogInterface;
import android.os.Build;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import org.adw.library.widgets.discreteseekbar.DiscreteSeekBar;

import eu.chainfire.libsuperuser.Shell;
import pl.droidsonroids.gif.GifImageView;

public class MainActivity extends AppCompatActivity {

    private DiscreteSeekBar seekBar;
    private TextView valuesView;
    private int Progress;
    public static final String XPATH = "/sys/class/leds/lcd-backlight/brightness";
    public static final String XMPATH = "/sys/class/leds/lcd-backlight/max_brightness";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        toolbar.setSubtitle("Hack Android's Brightness");

        seekBar = (DiscreteSeekBar) findViewById(R.id.valueParser);
        valuesView = (TextView) findViewById(R.id.curBrightness);
        final FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.help);
        final GifImageView imageView = (GifImageView) findViewById(R.id.gifView);



        new Thread(new Runnable() {
            @Override
            public void run() {
                if (!Shell.SU.available()) {
                    runOnUiThread(new Runnable() {
                        @Override
                        public void run() {
                            AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this)
                                    .setMessage("Error: Can't Get ROOT Access")
                                    .setCancelable(false)
                                    .setPositiveButton("Okay", new DialogInterface.OnClickListener() {
                                        public void onClick(DialogInterface dialog, int id) {
                                            finish();
                                            if (android.os.Build.VERSION.SDK_INT >= 21) {
                                                finishAndRemoveTask();
                                            }
                                        }
                                    }).setNeutralButton("Open SuperSU", new DialogInterface.OnClickListener() {
                                        @Override
                                        public void onClick(DialogInterface dialog, int which) {

                                        }
                                    });
                            AlertDialog dialog = builder.create();
                            dialog.show();
                        }
                    });
                } else {
                    runOnUiThread(new Runnable() {
                        @Override
                        public void run() {
                            seekBar.setMax(new ShellGet(XPATH, XMPATH).getMaxBrightness());
                            seekBar.setProgress(new ShellGet(XPATH, XMPATH).getCurrentBrightness());
                            valuesView.setText(percentize()+"%");
                            valuesView.setVisibility(View.VISIBLE);
                            imageView.setVisibility(View.INVISIBLE);
                        }
                    });
                }
            }
        }).start();

        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                    finishAndRemoveTask();
                } else finish();
            }
        });

        seekBar.setOnProgressChangeListener(new DiscreteSeekBar.OnProgressChangeListener() {
            @Override
            public void onProgressChanged(DiscreteSeekBar seekBar, int value, boolean fromUser) {
                Progress = value;
                if (fromUser) {
                    new ShellSet(fab, XPATH).setBrightness(value);
                    valuesView.setText(percentize()+"%");
                }
            }

            @Override
            public void onStartTrackingTouch(DiscreteSeekBar seekBar) {
            }

            @Override
            public void onStopTrackingTouch(DiscreteSeekBar seekBar) {
            }
        });

        Button plux = (Button) findViewById(R.id.plux);
        plux.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                System.out.println(Progress);
                new ShellSet(view, XPATH).setBrightness(new ShellGet(XPATH, XMPATH).getCurrentBrightness() + 1);
                valuesView.setText(percentize()+"%");
                seekBar.setProgress(new ShellGet(XPATH, XMPATH).getCurrentBrightness() + 1);
            }
        });
        Button minux = (Button) findViewById(R.id.minux);
        minux.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                System.out.println(Progress);
                new ShellSet(view, XPATH).setBrightness(new ShellGet(XPATH, XMPATH).getCurrentBrightness() - 1);
                valuesView.setText(percentize()+"%");
                seekBar.setProgress(new ShellGet(XPATH, XMPATH).getCurrentBrightness() - 1);
            }
        });
    }

    int percentize(){
        return Math.round((new ShellGet(XPATH, XMPATH).getCurrentBrightness()*100)/new ShellGet(XPATH,XMPATH).getMaxBrightness());
    }

}
