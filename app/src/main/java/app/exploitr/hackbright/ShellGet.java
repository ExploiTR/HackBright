package app.exploitr.hackbright;


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

class ShellGet {

    private String mmPath;
    private String mPath;
    private Process executor;
    private Process executor1;
    private static int maxBrightness;
    private static int curBrightness;

    ShellGet(String path, String pathm){
        this.mPath = path;
        this.mmPath = pathm;
    }

    int getCurrentBrightness(){
        try {
            executor = Runtime.getRuntime().exec("su -c cat "+mPath);
            executor.waitFor();
        } catch (Exception e) {
            e.printStackTrace();
            e.getSuppressed();
        }

        StringBuilder textf = new StringBuilder();

        try {
            BufferedReader br = new BufferedReader(new InputStreamReader(executor.getInputStream()));
            String line;
            while ((line = br.readLine()) != null) {
                textf.append(line).append('\n');
            }
            br.close();
        } catch (IOException e) {
            e.printStackTrace();
            e.getSuppressed();
        }

        try{curBrightness = Integer.parseInt(textf.toString().replaceAll("[^1234567890]",""));}catch (Exception e){
            e.printStackTrace();
            e.getSuppressed();
        }
        return curBrightness;
    }

    int getMaxBrightness(){
        StringBuilder texts;
        System.out.println(mPath);
        try {
            executor1 = Runtime.getRuntime().exec("su -c cat "+mmPath);
            executor1.waitFor();
            if(executor1.exitValue()!=0) Thread.sleep(1000);
        } catch (Exception e) {
            e.printStackTrace();
            e.getSuppressed();
        }

        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            e.printStackTrace();
            e.getSuppressed();
        }

        texts = new StringBuilder();
        try {
            BufferedReader br = new BufferedReader(new InputStreamReader(executor1.getInputStream()));
            String line;
            while ((line = br.readLine()) != null) {
                texts.append(line).append('\n');
            }
            br.close();
        } catch (IOException e) {
            e.printStackTrace();
            e.getSuppressed();
        }
        try{maxBrightness = Integer.parseInt(texts.toString().replaceAll("[^0123456789]",""));}catch (Exception e){
            e.printStackTrace();
            e.getSuppressed();}

        return maxBrightness;
    }

}
