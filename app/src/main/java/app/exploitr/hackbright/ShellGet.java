package app.exploitr.hackbright;

import android.os.AsyncTask;
import android.view.View;
import android.widget.TextView;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;

import me.tankery.lib.circularseekbar.CircularSeekBar;


class ShellGet extends AsyncTask<Object, Object, ArrayList<Float>> {


    private Process executor;
    private Process executor1;
    private static float maxBrightness;
    private static float curBrightness;
    private CircularSeekBar seekBarX;
    private TextView seekBack;

    ShellGet(CircularSeekBar seekBar, TextView seekback) {
        this.seekBarX = seekBar;
        this.seekBack = seekback;
    }

    @Override
    protected ArrayList<Float> doInBackground(Object... params) {
        StringBuilder texts;

        try {
            executor1 = Runtime.getRuntime().exec("su -c cat /sys/class/leds/lcd-backlight/max_brightness");
            executor1.waitFor();
            if(executor1.exitValue()!=0){
                android.os.Process.killProcess(android.os.Process.myPid());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            e.printStackTrace();
            e.getSuppressed();
        }

        texts = new StringBuilder();
        try {
            BufferedReader br = new BufferedReader(new InputStreamReader(executor1.getInputStream()));
            String line;
            while ((line = br.readLine()) != null) {
                texts.append(line);
                texts.append('\n');
            }
            br.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        maxBrightness = Float.parseFloat(texts.toString());


        try {
            executor = Runtime.getRuntime().exec("su -c cat /sys/class/leds/lcd-backlight/brightness");
            executor.waitFor();
        } catch (Exception e) {
            e.printStackTrace();
        }

        StringBuilder textf = new StringBuilder();

        try {
            BufferedReader br = new BufferedReader(new InputStreamReader(executor.getInputStream()));
            String line;
            while ((line = br.readLine()) != null) {
                textf.append(line);
                textf.append('\n');
            }
            br.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        curBrightness = Float.parseFloat(textf.toString());

        ArrayList<Float> list = new ArrayList<>();
        list.add(0, maxBrightness);
        list.add(1, curBrightness);
        return list;
    }

    @Override
    protected void onPostExecute(ArrayList<Float> floats) {
        super.onPostExecute(floats);
        maxBrightness = floats.get(0);
        curBrightness = floats.get(1);

        System.out.println("onPostExecute-ShellGet-" + curBrightness);

        seekBarX.setProgress((curBrightness / maxBrightness) * 100);
        seekBarX.setVisibility(View.VISIBLE);
        seekBack.setText(String.valueOf((int) curBrightness) + "/" + String.valueOf((int) maxBrightness));
        seekBack.setVisibility(View.VISIBLE);
    }
}
